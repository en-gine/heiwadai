// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: v1/admin/UserCheckin.proto

package admin

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	shared "server/api/v1/shared"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CheckinData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	StoreID         string                 `protobuf:"bytes,2,opt,name=StoreID,proto3" json:"StoreID,omitempty"`
	StoreName       string                 `protobuf:"bytes,3,opt,name=StoreName,proto3" json:"StoreName,omitempty"`
	StoreBranchName string                 `protobuf:"bytes,4,opt,name=StoreBranchName,proto3" json:"StoreBranchName,omitempty"`
	UserID          string                 `protobuf:"bytes,5,opt,name=UserID,proto3" json:"UserID,omitempty"`
	UserFirstName   string                 `protobuf:"bytes,6,opt,name=UserFirstName,proto3" json:"UserFirstName,omitempty"`
	UserLastName    string                 `protobuf:"bytes,7,opt,name=UserLastName,proto3" json:"UserLastName,omitempty"`
	CheckinAt       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=CheckinAt,proto3,oneof" json:"CheckinAt,omitempty"`
	IsArchive       bool                   `protobuf:"varint,9,opt,name=IsArchive,proto3" json:"IsArchive,omitempty"`
}

func (x *CheckinData) Reset() {
	*x = CheckinData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_admin_UserCheckin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckinData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckinData) ProtoMessage() {}

func (x *CheckinData) ProtoReflect() protoreflect.Message {
	mi := &file_v1_admin_UserCheckin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckinData.ProtoReflect.Descriptor instead.
func (*CheckinData) Descriptor() ([]byte, []int) {
	return file_v1_admin_UserCheckin_proto_rawDescGZIP(), []int{0}
}

func (x *CheckinData) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *CheckinData) GetStoreID() string {
	if x != nil {
		return x.StoreID
	}
	return ""
}

func (x *CheckinData) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

func (x *CheckinData) GetStoreBranchName() string {
	if x != nil {
		return x.StoreBranchName
	}
	return ""
}

func (x *CheckinData) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *CheckinData) GetUserFirstName() string {
	if x != nil {
		return x.UserFirstName
	}
	return ""
}

func (x *CheckinData) GetUserLastName() string {
	if x != nil {
		return x.UserLastName
	}
	return ""
}

func (x *CheckinData) GetCheckinAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CheckinAt
	}
	return nil
}

func (x *CheckinData) GetIsArchive() bool {
	if x != nil {
		return x.IsArchive
	}
	return false
}

type CheckinsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checkins     []*CheckinData       `protobuf:"bytes,1,rep,name=Checkins,proto3" json:"Checkins,omitempty"`
	PageResponse *shared.PageResponse `protobuf:"bytes,2,opt,name=PageResponse,proto3,oneof" json:"PageResponse,omitempty"`
}

func (x *CheckinsResponse) Reset() {
	*x = CheckinsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_admin_UserCheckin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckinsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckinsResponse) ProtoMessage() {}

func (x *CheckinsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_admin_UserCheckin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckinsResponse.ProtoReflect.Descriptor instead.
func (*CheckinsResponse) Descriptor() ([]byte, []int) {
	return file_v1_admin_UserCheckin_proto_rawDescGZIP(), []int{1}
}

func (x *CheckinsResponse) GetCheckins() []*CheckinData {
	if x != nil {
		return x.Checkins
	}
	return nil
}

func (x *CheckinsResponse) GetPageResponse() *shared.PageResponse {
	if x != nil {
		return x.PageResponse
	}
	return nil
}

type GetRecentAllCheckinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetRecentAllCheckinRequest) Reset() {
	*x = GetRecentAllCheckinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_admin_UserCheckin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRecentAllCheckinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRecentAllCheckinRequest) ProtoMessage() {}

func (x *GetRecentAllCheckinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_admin_UserCheckin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRecentAllCheckinRequest.ProtoReflect.Descriptor instead.
func (*GetRecentAllCheckinRequest) Descriptor() ([]byte, []int) {
	return file_v1_admin_UserCheckin_proto_rawDescGZIP(), []int{2}
}

func (x *GetRecentAllCheckinRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type UserCheckinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID string        `protobuf:"bytes,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	Pager  *shared.Pager `protobuf:"bytes,2,opt,name=Pager,proto3" json:"Pager,omitempty"`
}

func (x *UserCheckinRequest) Reset() {
	*x = UserCheckinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_admin_UserCheckin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCheckinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCheckinRequest) ProtoMessage() {}

func (x *UserCheckinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_admin_UserCheckin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCheckinRequest.ProtoReflect.Descriptor instead.
func (*UserCheckinRequest) Descriptor() ([]byte, []int) {
	return file_v1_admin_UserCheckin_proto_rawDescGZIP(), []int{3}
}

func (x *UserCheckinRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *UserCheckinRequest) GetPager() *shared.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

var File_v1_admin_UserCheckin_proto protoreflect.FileDescriptor

var file_v1_admin_UserCheckin_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x2f, 0x50, 0x61, 0x67, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xcc, 0x02, 0x0a, 0x0b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x18, 0x0a, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x24, 0x0a, 0x0d, 0x55, 0x73, 0x65,
	0x72, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x46, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x61, 0x73, 0x74, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x41, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x48, 0x00, 0x52, 0x09, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x41, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x49, 0x73, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x41, 0x74, 0x22, 0xa0,
	0x01, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x73, 0x12, 0x44, 0x0a, 0x0c, 0x50, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x0c, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x32, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x41, 0x6c,
	0x6c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x58, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x2a, 0x0a, 0x05, 0x50, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x50, 0x61, 0x67, 0x65, 0x72, 0x32,
	0xc5, 0x01, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x5a, 0x0a, 0x0c, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x52, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x12, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61,
	0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x8a, 0x01, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x42, 0x10, 0x55, 0x73,
	0x65, 0x72, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01,
	0x5a, 0x13, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0xa2, 0x02, 0x03, 0x53, 0x41, 0x58, 0xaa, 0x02, 0x0c, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0xca, 0x02, 0x0c, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x5c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0xe2, 0x02, 0x18, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5c, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x3a, 0x3a, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_admin_UserCheckin_proto_rawDescOnce sync.Once
	file_v1_admin_UserCheckin_proto_rawDescData = file_v1_admin_UserCheckin_proto_rawDesc
)

func file_v1_admin_UserCheckin_proto_rawDescGZIP() []byte {
	file_v1_admin_UserCheckin_proto_rawDescOnce.Do(func() {
		file_v1_admin_UserCheckin_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_admin_UserCheckin_proto_rawDescData)
	})
	return file_v1_admin_UserCheckin_proto_rawDescData
}

var file_v1_admin_UserCheckin_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_v1_admin_UserCheckin_proto_goTypes = []interface{}{
	(*CheckinData)(nil),                // 0: server.admin.CheckinData
	(*CheckinsResponse)(nil),           // 1: server.admin.CheckinsResponse
	(*GetRecentAllCheckinRequest)(nil), // 2: server.admin.GetRecentAllCheckinRequest
	(*UserCheckinRequest)(nil),         // 3: server.admin.UserCheckinRequest
	(*timestamppb.Timestamp)(nil),      // 4: google.protobuf.Timestamp
	(*shared.PageResponse)(nil),        // 5: server.shared.PageResponse
	(*shared.Pager)(nil),               // 6: server.shared.Pager
}
var file_v1_admin_UserCheckin_proto_depIdxs = []int32{
	4, // 0: server.admin.CheckinData.CheckinAt:type_name -> google.protobuf.Timestamp
	0, // 1: server.admin.CheckinsResponse.Checkins:type_name -> server.admin.CheckinData
	5, // 2: server.admin.CheckinsResponse.PageResponse:type_name -> server.shared.PageResponse
	6, // 3: server.admin.UserCheckinRequest.Pager:type_name -> server.shared.Pager
	2, // 4: server.admin.UserCheckinController.GetAllRecent:input_type -> server.admin.GetRecentAllCheckinRequest
	3, // 5: server.admin.UserCheckinController.GetUserLog:input_type -> server.admin.UserCheckinRequest
	1, // 6: server.admin.UserCheckinController.GetAllRecent:output_type -> server.admin.CheckinsResponse
	1, // 7: server.admin.UserCheckinController.GetUserLog:output_type -> server.admin.CheckinsResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_v1_admin_UserCheckin_proto_init() }
func file_v1_admin_UserCheckin_proto_init() {
	if File_v1_admin_UserCheckin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_admin_UserCheckin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckinData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_admin_UserCheckin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckinsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_admin_UserCheckin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRecentAllCheckinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_admin_UserCheckin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCheckinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_v1_admin_UserCheckin_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_v1_admin_UserCheckin_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_admin_UserCheckin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_admin_UserCheckin_proto_goTypes,
		DependencyIndexes: file_v1_admin_UserCheckin_proto_depIdxs,
		MessageInfos:      file_v1_admin_UserCheckin_proto_msgTypes,
	}.Build()
	File_v1_admin_UserCheckin_proto = out.File
	file_v1_admin_UserCheckin_proto_rawDesc = nil
	file_v1_admin_UserCheckin_proto_goTypes = nil
	file_v1_admin_UserCheckin_proto_depIdxs = nil
}
